name: Sync Requirements

on:
  push:
    paths:
      - 'requirements-dev.txt'
      - 'pyproject.toml'
    branches: ['**']  # Run on all branches
  schedule:
    - cron: '0 0 1 * *'  # Monthly on the 1st
  workflow_dispatch:
    inputs:
      conda_env_suffix:
        description: 'Conda environment name suffix (e.g., 20250404)'
        required: false
        default: ''

jobs:
  sync-requirements:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-sync-${{ hashFiles('requirements-dev.txt') }}
      
      - name: Install base requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements-dev.txt
      
      - name: Generate documentation requirements
        run: python scripts/generate_docs_requirements.py
        
      - name: Generate frozen requirements  
        run: python scripts/freeze_requirements.py
        
      - name: Update conda environment
        run: |
          # Use input suffix or generate timestamp
          if [ -n "${{ github.event.inputs.conda_env_suffix }}" ]; then
            SUFFIX="${{ github.event.inputs.conda_env_suffix }}"
          else
            SUFFIX=$(date +%Y%m%d)
          fi
          python scripts/requirements_to_conda_env.py --name solarwindpy-$SUFFIX
          echo "CONDA_ENV_FILE=solarwindpy-$SUFFIX.yml" >> $GITHUB_ENV
      
      - name: Validate generated files
        run: |
          echo "Validating requirements.txt..."
          python -m pip install --dry-run -r requirements.txt
          
          echo "Validating docs requirements..."
          python -m pip install --dry-run -r docs/requirements.txt
          
          echo "Validating conda environment..."
          if command -v conda &> /dev/null; then
            conda env create -f ${{ env.CONDA_ENV_FILE }} --dry-run
          fi
        continue-on-error: true
      
      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Files changed:"
            git status --porcelain
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No files changed"
          fi
      
      - name: Create Pull Request
        if: steps.verify-changed-files.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore: auto-sync requirements from requirements-dev.txt
            
            - Updated docs/requirements.txt with documentation dependencies
            - Updated requirements.txt with frozen versions
            - Updated conda environment file: ${{ env.CONDA_ENV_FILE }}
            - Auto-generated from requirements-dev.txt changes
          title: "chore: Update requirements files"
          body: |
            ## Automated Requirements Update
            
            This PR was automatically generated by the sync-requirements workflow.
            
            ### Changes:
            - Updated `docs/requirements.txt` with documentation dependencies
            - Updated `requirements.txt` with frozen versions
            - Updated conda environment file: `${{ env.CONDA_ENV_FILE }}`
            
            ### Source:
            Generated from changes to `requirements-dev.txt`
          branch: auto-update-requirements
          delete-branch: true
          labels: |
            dependencies
            automated