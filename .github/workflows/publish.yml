name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allow manual trigger for testing
    inputs:
      target:
        description: 'Deployment target'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi
      dry_run:
        description: 'Dry run (build only, no upload)'
        required: false
        default: true
        type: boolean

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Need full history for setuptools_scm
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Verify tag format
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if ! [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "Error: Tag $TAG does not match version pattern v*.*.* (e.g., v1.0.0)"
            exit 1
          fi
          echo "Publishing version $TAG"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          pip install -r requirements-dev.txt
      
      - name: Run full test suite
        run: |
          flake8
          pytest -q
      
      - name: Build package
        run: python -m build
      
      - name: Check package with twine
        run: twine check dist/*
      
      - name: Verify package contents
        run: |
          echo "Built packages:"
          ls -la dist/
          echo ""
          echo "Package contents:"
          tar -tzf dist/*.tar.gz | head -20
          echo ""
          echo "Wheel contents:"
          unzip -l dist/*.whl | head -20
      
      # TestPyPI deployment (for testing)
      - name: Publish to TestPyPI
        if: |
          (github.event_name == 'workflow_dispatch' && 
           github.event.inputs.target == 'testpypi' && 
           github.event.inputs.dry_run != 'true') ||
          (github.event_name == 'push' && 
           startsWith(github.ref, 'refs/tags/') && 
           contains(github.ref, 'rc'))  # Release candidates go to test
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          skip-existing: true
        continue-on-error: true  # Don't fail if token not configured yet
      
      # Production PyPI deployment (only for non-RC tags)
      - name: Publish to PyPI
        if: |
          (github.event_name == 'workflow_dispatch' && 
           github.event.inputs.target == 'pypi' && 
           github.event.inputs.dry_run != 'true') ||
          (github.event_name == 'push' && 
           startsWith(github.ref, 'refs/tags/v') && 
           !contains(github.ref, 'rc'))  # Only stable releases
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
        continue-on-error: true  # Don't fail if token not configured yet
      
      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
